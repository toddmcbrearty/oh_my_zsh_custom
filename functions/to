#!/bin/zsh zsh

function to() {
  if [[ -z "$ROOT_CODE_DIR" ]]; then
    echo "ROOT_CODE_DIR is not set. Please set it in '~/.oh-my-zsh/env.zsh'."
    return
  fi

  if [[ "$1" == "help" ]]; then
    cat <<EOF
    Usage: to [OPTIONS] <project_name>

    This script navigates to project directories based on predefined rules and can optionally open the directory in PHPStorm for specific users.

    Arguments:
      project_name       Name of the project to navigate to. Matches specific keywords to determine the correct directory.

    Options:
      -p                 Open the directory in PHPStorm (only works in the "todd" user environment).
      --                 Indicates the end of options.

    Environment Variables:
      ROOT_CODE_DIR      This variable must be set. Represents the root directory containing the project folders.
                         Ensure it is set in '~/.oh-my-zsh/loader.sh'.
      IAM                Identifies the current user.
                         Options:
                           - "todd": Allows opening projects in PHPStorm.
                           - "ubuntu": Uses specific rules to map project names to directories.

    Examples:
      to ordersite       Navigate to the "ordersite" project directory.
      to -p admin        Navigate to the "admin" project directory and open it in PHPStorm (only if IAM='todd').

    Autocompletion:
      - This script supports tab autocompletion for project names and the $(-p) option.
      - Autocompletion derives directories from the contents of the ROOT_CODE_DIR variable.

    Notes:
      - If the project directory does not exist, an error will be displayed.
      - If the ROOT_CODE_DIR variable is not set, the script will abort with a message.

EOF
    return
  fi

  local command=""
  local open_pstorm=false
  local start_app=false
  local restart_app=false
  local code_dir="$1"
  local code_dir="$ROOT_CODE_DIR/$code_dir"

  if [[ "${ON_LOCAL}" == true ]]; then
    . "$ZSH_FUNCTIONS/includes/c9.zsh"
    . "$ZSH_FUNCTIONS/includes/giftogram.zsh"
  elif [[ "${ON_REMOTE}" == true ]]; then
    . "$ZSH_FUNCTIONS/includes/remote.zsh"
  fi

  if [ ! -d "$code_dir" ]; then
    echo "\"$code_dir\" not found."
    return
  fi

  while test $# != 0; do
    case "$1" in
    -p) open_pstorm=true ;;
    -s) start_app=true ;;
    -rs) restart_app=true ;;
    --)
      shift
      break
      ;;
    esac
    shift
  done

  # START/RESTART APP
  if [[ "$start_app" == true || "$restart_app" == true ]]; then
    if [[ "$code_dir" == *"frontend"* || "$code_dir" == *"react"* ]]; then
      if [[ "$restart_app" == true ]]; then
        local port_used=$(lsof -t -i:3000)
        if [[ -n "$port_used" ]]; then
          echo "Killing process on port 3000"
          kill_port 3000
          sleep .03
        fi
      fi

      command="nvm use && npm run dev || npm run start"
    fi
  fi

  echo "$fg[green]Moving to: $code_dir${reset_color}"

  if [[ "$command" != "" ]]; then
    echo "$fg[green]Running: $command${reset_color}"
  fi

  cd "$code_dir" || exit 1

  if [[ "$command" != "" ]]; then
    if [[ "$open_pstorm" == true ]]; then
      echo "$fg[green]PHPStorm might not open${reset_color}"
    fi

    eval "$command"
  fi

  if [[ "$ON_LOCAL" == false && "$open_pstorm" == true ]]; then
    echo "Can not open directory in PHPStorm in this environment."
  fi

  if [[ "$ON_LOCAL" == true && "$open_pstorm" == true ]]; then
    phpstorm .
  fi
}
